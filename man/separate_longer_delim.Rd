% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/separate-longer.R
\name{separate_longer_delim}
\alias{separate_longer_delim}
\alias{separate_longer_fixed}
\alias{separate_longer_group}
\title{Split a string into rows}
\usage{
separate_longer_delim(data, cols, delim)

separate_longer_fixed(data, cols, width, keep_empty = FALSE)

separate_longer_group(data, cols, pattern, keep_empty = FALSE)
}
\arguments{
\item{data}{A data frame.}

\item{cols}{String columns to separate into pieces. If needed, you can use
tidyselect to multiple columns.}

\item{delim}{Delimiter between columns, a stringr pattern.

Note that the default is a regular expression so that \code{delim = "."} will
split on every character. If you need to split by a special character, you
can use \code{delim = stringr::fixed(".")}.}

\item{width}{Number of characters to split by.}

\item{keep_empty}{By default, you'll get \code{nchar(x) / width} rows for
each observation. If \code{nchar(x)} is zero, this means the entire input
row will be dropped from the output. If you want to preserve all rows,
use \code{keep_empty = TRUE} to replace size-0 elements with a missing value.}

\item{pattern}{Regular expression containing a capturing group, i.e. \verb{()}.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Each of these functions takes a string and splits it into multiple rows:
\itemize{
\item \code{separate_longer_delim()} splits by a delimiter.
\item \code{separate_longer_fixed()} splits by a fixed width.
\item \code{separate_longer_group()} extracts the first group from a repeated match.
}
}
\examples{
df <- tibble(id = 1:4, x = c("x", "x y", "x y z", NA))
df \%>\% separate_longer_delim(x, delim = " ")

df <- tibble(id = 1:3, x = c("x1", "x2 x3 y1 x4", "y2"))
df \%>\% separate_longer_group(x, "x(.)")

# You can separate multiple columns at a time
df <- tibble(id = 1:3, x = c("x", "x y", "x y z"), y = c("a", "a b", "a b c"))
df \%>\% separate_longer_delim(c(x, y), delim = " ")

# Or instead split by a fixed length
df <- tibble(id = 1:3, x = c("ab", "def", ""))
df \%>\% separate_longer_fixed(x, 1)
df \%>\% separate_longer_fixed(x, 2)
df \%>\% separate_longer_fixed(x, 2, keep_empty = TRUE)
}
